# [doc = r"Register block"] # [repr (C)] pub struct RegisterBlock { # [doc = "0x00 - Key register"] pub kr : KR , # [doc = "0x04 - Prescaler register"] pub pr : PR , # [doc = "0x08 - Reload register"] pub rlr : RLR , # [doc = "0x0c - Status register"] pub sr : SR , # [doc = "0x10 - Control register"] pub cr : CR , # [doc = "0x14 - Interruput generate value register"] pub igen : IGEN , # [doc = "0x18 - Counter"] pub cnt : CNT , # [doc = "0x1c - prescaler Counter"] pub ps : PS , } # [doc = "KR (w) register accessor: an alias for `Reg<KR_SPEC>`"] pub type KR = crate :: Reg < kr :: KR_SPEC > ; # [doc = "Key register"] pub mod kr ; # [doc = "PR (rw) register accessor: an alias for `Reg<PR_SPEC>`"] pub type PR = crate :: Reg < pr :: PR_SPEC > ; # [doc = "Prescaler register"] pub mod pr ; # [doc = "RLR (rw) register accessor: an alias for `Reg<RLR_SPEC>`"] pub type RLR = crate :: Reg < rlr :: RLR_SPEC > ; # [doc = "Reload register"] pub mod rlr ; # [doc = "SR (r) register accessor: an alias for `Reg<SR_SPEC>`"] pub type SR = crate :: Reg < sr :: SR_SPEC > ; # [doc = "Status register"] pub mod sr ; # [doc = "CR (rw) register accessor: an alias for `Reg<CR_SPEC>`"] pub type CR = crate :: Reg < cr :: CR_SPEC > ; # [doc = "Control register"] pub mod cr ; # [doc = "IGEN (rw) register accessor: an alias for `Reg<IGEN_SPEC>`"] pub type IGEN = crate :: Reg < igen :: IGEN_SPEC > ; # [doc = "Interruput generate value register"] pub mod igen ; # [doc = "CNT (r) register accessor: an alias for `Reg<CNT_SPEC>`"] pub type CNT = crate :: Reg < cnt :: CNT_SPEC > ; # [doc = "Counter"] pub mod cnt ; # [doc = "PS (r) register accessor: an alias for `Reg<PS_SPEC>`"] pub type PS = crate :: Reg < ps :: PS_SPEC > ; # [doc = "prescaler Counter"] pub mod ps ;